# This file was generated by the build system used internally in Yandex and called "ya"
# (https://github.com/yandex/yatool).
#
# Configuration files of ya build system are usually named ya.make. If ya.make file is present
# at the root of the repository, then this repository supports ya build.
#
# If the repository supports both CMake and ya build configurations, please modify both of them.
#
# If only CMake build configuration is supported then modify only CMake files and note that only
# simple modifications are allowed like adding source-files to targets or adding simple properties
# like target_include_directories. These modifications will be ported to original ya.make files
# by maintainers. Any complex modifications which can't be easily ported back to the ya build
# system may be rejected.

find_package(linux-headers-generic REQUIRED)

add_library(Target-AArch64-MCTargetDesc)

target_compile_options(Target-AArch64-MCTargetDesc PRIVATE
  $<IF:$<CXX_COMPILER_ID:MSVC>,,-Wno-everything>
)

target_include_directories(Target-AArch64-MCTargetDesc PRIVATE
  ${PROJECT_BINARY_DIR}/contrib/libs/llvm16/lib/Target/AArch64
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Target/AArch64
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Target/AArch64/MCTargetDesc
)

target_link_libraries(Target-AArch64-MCTargetDesc PUBLIC
  linux-headers-generic::linux-headers-generic
  contrib-libs-cxxsupp
  contrib-libs-llvm16
  libs-llvm16-include
  llvm16-lib-BinaryFormat
  llvm16-lib-MC
  llvm16-lib-Support
  Target-AArch64-TargetInfo
  Target-AArch64-Utils
  llvm16-lib-TargetParser
)

target_sources(Target-AArch64-MCTargetDesc PRIVATE
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Target/AArch64/MCTargetDesc/AArch64AsmBackend.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Target/AArch64/MCTargetDesc/AArch64ELFObjectWriter.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Target/AArch64/MCTargetDesc/AArch64ELFStreamer.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Target/AArch64/MCTargetDesc/AArch64InstPrinter.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Target/AArch64/MCTargetDesc/AArch64MCAsmInfo.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Target/AArch64/MCTargetDesc/AArch64MCCodeEmitter.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Target/AArch64/MCTargetDesc/AArch64MCExpr.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Target/AArch64/MCTargetDesc/AArch64MCTargetDesc.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Target/AArch64/MCTargetDesc/AArch64MachObjectWriter.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Target/AArch64/MCTargetDesc/AArch64TargetStreamer.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Target/AArch64/MCTargetDesc/AArch64WinCOFFObjectWriter.cpp
  ${PROJECT_SOURCE_DIR}/contrib/libs/llvm16/lib/Target/AArch64/MCTargetDesc/AArch64WinCOFFStreamer.cpp
)

