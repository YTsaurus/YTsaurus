// {{ autogen_marker }}

#pragma once

#include "public.h"

#include <yt/yt/orm/client/native/client.h>

#include <library/cpp/yson/node/node.h>

namespace {{ client_native_cpp_namespace }} {

////////////////////////////////////////////////////////////////////////////////

//! Token will be taken from env {{ default_db_name.upper() }}_TOKEN.
//! If the {{ default_db_name.upper() }}_TOKEN was empty, token will be taken from ~/.{{ default_db_name }}/token.
TString FindToken();

void ForwardTokenToSecureVault(THashMap<TString, NYT::TNode>& secureVault);

const NYT::NLogging::TLogger& GetDefaultClientLogger();

NYT::NOrm::NClient::NNative::IClientPtr CreateClient(
    TConnectionConfigPtr config,
    NYT::NOrm::NClient::NNative::TClientOptions clientOptions = {},
    std::optional<NYT::NLogging::TLogger> customLogger = {});

////////////////////////////////////////////////////////////////////////////////

} // namespace {{ client_native_cpp_namespace }}
