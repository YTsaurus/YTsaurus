# {{ autogen_marker }}

{%- if db_version is defined %}
DB_VERSION = {{ db_version }}
{%- endif %}

{%- macro table_schema(table_columns, orm_flags = None) -%}
        "schema": [
    {%- for column in table_columns %}
            {
        {%- for k, v in column.yt_schema.items() %}
                "{{ k }}": {{ v | tojson }},
        {%- endfor %}
            },
    {%- endfor %}
        ],
        "orm_flags": {{ {"table_group": "table"} | combine(orm_flags or {}) }},
{%- endmacro %}

TABLES = {
{%- for object in objects %}
    "{{ object.table_name }}": {
        {{ table_schema(object.table_columns, {"table_group": "object", "type": object.snake_case_name}) }}
    },
    {%- if object.separate_parents_table %}
    "{{ object.parents_table_name }}": {
        {{ table_schema(object.parents_table_columns, {"table_group": "objects_to_parents", "type": object.snake_case_name}) }}
    },
    {%- endif %}
{%- endfor %}

{%- for references_table in references_tables %}
    "{{ references_table.table_name }}": {
        {{ table_schema(references_table.table_columns, {"table_group": "reference"}) }}
    },
{%- endfor %}
    # Builtin tables.
    {%- if not database_options.no_legacy_parents_table %}
    "parents": {
        "schema": [
            {%- if not database_options.no_parents_hash %}
            {
                "name": "hash",
                "type": "uint64",
                "expression": "farm_hash([object_id])",
                "sort_order": "ascending",
                "group": "default",
            },
            {%- endif %}
            {"name": "object_id", "type": "string", "sort_order": "ascending", "group": "default"},
            {"name": "object_type", "type": "int64", "sort_order": "ascending", "group": "default"},
            {"name": "parent_id", "type": "string", "group": "default"},
        ],
    },
    {%- endif %}
    {%- if database_options.enable_annotations %}
    "annotations": {
        "schema": [
            {"name": "object_id", "type": "string", "sort_order": "ascending", "group": "default"},
            {"name": "object_type", "type": "int64", "sort_order": "ascending", "group": "default"},
            {"name": "name", "type": "string", "sort_order": "ascending", "group": "default"},
            {"name": "value", "type": "any", "group": "default"},
        ],
    },
    {%- endif %}
    "subject_to_type": {
        "schema": [
            {"name": "subject_id", "type": "string", "sort_order": "ascending", "group": "default"},
            {"name": "type", "type": "int64", "group": "default"},
        ],
    },
    {%- if database_options.enable_tombstones %}
    # Max data TTL must be greater or equal than min data TTL (default value is 30 minutes)
    # to workaround YT-15159.
    # Use default min_data_ttl. See YPSUPPORT-846 for details.
    "tombstones": {
        "schema": [
            {"name": "object_id", "type": "string", "sort_order": "ascending", "group": "default"},
            {"name": "object_type", "type": "int64", "sort_order": "ascending", "group": "default"},
            {"name": "removal_time", "type": "uint64", "group": "default"},
        ],
        "attributes": {
            "min_data_versions": 0,
            "max_data_versions": 1,
            "max_data_ttl": 1000 * 60 * 60 * 24 * 30,
        }
    },
    {%- endif %}
{%- if database_options.enable_asynchronous_removals %}
    "pending_removals": {
        "schema": [
            {"name": "object_type", "type": "int64", "sort_order": "ascending", "group": "default"},
            {"name": "object_id_hash", "type": "uint64", "expression": "farm_hash([object_id])", "sort_order": "ascending", "group": "default"},
            {"name": "object_id", "type": "string", "sort_order": "ascending", "group": "default"},
            {"name": "removal_time", "type": "uint64", "group": "default"},
        ],
    },
{%- endif %}
{%- for history_table in database_options.history_tables %}
    "{{ history_table.primary_table_name }}": {
        "schema": [
            {%- if not history_table.no_hash %}
            {
                "name": "hash",
                "type": "uint64",
                "expression": "{{history_table.primary_table_hash_expression}}",
                "sort_order": "ascending",
                "group": "{{ history_table.table_key_group }}",
            },
            {%- endif %}
            {"name": "object_type", "type": "int64", "sort_order": "ascending", "group": "{{ history_table.table_key_group }}"},
            {"name": "object_id", "type": "string", "sort_order": "ascending", "group": "{{ history_table.table_key_group }}"},
            {%- if history_table.use_uuid_in_key %}
            {"name": "uuid", "type": "string", "sort_order": "ascending", "group": "{{ history_table.table_key_group }}"},
            {"name": "{{ history_table.time_column_name }}", "type": "uint64", "sort_order": "ascending", "group": "{{ history_table.table_key_group }}"},
            {"name": "transaction_id", "type": "string", "sort_order": "ascending", "group": "{{ history_table.table_key_group }}"},
            {"name": "event_type", "type": "int64", "lock": "api", "group": "default"},
            {%- else %}
            {"name": "{{ history_table.time_column_name }}", "type": "uint64", "sort_order": "ascending", "group": "{{ history_table.table_key_group }}"},
            {"name": "transaction_id", "type": "string", "sort_order": "ascending", "group": "{{ history_table.table_key_group }}"},
            {"name": "event_type", "type": "int64", "sort_order": "ascending", "group": "{{ history_table.table_key_group }}"},
            {"name": "uuid", "type": "string", "lock": "api", "group": "default"},
            {%- endif %}
            {"name": "user", "type": "string", "lock": "api", "group": "default"},
            {"name": "value", "type": "any", "lock": "api", "group": "default"},
            {"name": "history_enabled_attributes", "type": "any", "lock": "api", "group": "default"},
            {"name": "etc", "type": "any", "lock": "api", "group": "default"},
        ],
        "attributes": {
            "in_memory_mode": "none",
        },
    },
    "{{history_table.index_table_name}}": {
        "schema": [
            {%- if not history_table.no_hash %}
            {
                "name": "hash",
                "type": "uint64",
                "expression": "{{history_table.index_table_hash_expression}}",
                "sort_order": "ascending",
                "group": "default",
            },
            {%- endif %}
            {"name": "object_type", "type": "int64", "sort_order": "ascending", "group": "default"},
            {"name": "history_event_type", "type": "int64", "sort_order": "ascending", "group": "default"},
            {"name": "index_event_type", "type": "string", "sort_order": "ascending", "group": "default"},
            {"name": "object_id", "type": "string", "sort_order": "ascending", "group": "default"},
            {%- if history_table.use_uuid_in_key %}
            {"name": "uuid", "type": "string", "sort_order": "ascending", "group": "default"},
            {%- endif %}
            {"name": "{{ history_table.time_column_name }}", "type": "uint64", "sort_order": "ascending", "group": "default"},
            {"name": "transaction_id", "type": "string", "sort_order": "ascending", "group": "default"},
            {%- if not history_table.use_uuid_in_key %}
            {"name": "uuid", "type": "string", "lock": "api", "group": "default"},
            {%- endif %}
            {"name": "user", "type": "string", "lock": "api", "group": "default"},
            {"name": "value", "type": "any", "lock": "api", "group": "default"},
            {"name": "etc", "type": "any", "lock": "api", "group": "default"},
        ],
        "attributes": {
            "in_memory_mode": "none",
        },
    },
{%- endfor %}
}

WATCH_LOGS = {
{%- for object in objects %}
{%- for watch_log in object.watch_logs %}
    "{{ object.table_name }}_{{ watch_log.snake_case_name }}": {
        "schema": [
            {"name": "$timestamp", "type": "uint64", "group": "default"},
            {"name": "record", "type": "any", "group": "default"},
    {%- if database_options.enable_cumulative_data_weight_for_watch_log %}
            {"name": "$cumulative_data_weight", "type": "int64", "group": "default"},
    {%- endif %}
        ],
        "attributes": {
            "commit_ordering": "strong",
            "tablet_count": {{ watch_log.tablet_count }},
            "min_data_ttl": {{ watch_log.min_data_ttl }},
            "max_data_ttl": {{ watch_log.max_data_ttl }},
            "max_data_versions": {{ watch_log.max_data_versions }},
            "min_data_versions": {{ watch_log.min_data_versions }},
        },
        "orm_flags": {"table_group": "watch_log", "type": "{{ object.snake_case_name }}"},
    {%- if watch_log.custom_options %}
        "custom_options": {{ watch_log.custom_options }},
    {%- endif %}
    },
{%- endfor %}
{%- endfor %}
}

INDEXES = {
{%- for index in indexes | rejectattr("underlying_table") %}
    "{{ index.table_name }}": {
        {{ table_schema(index.table_columns, {"table_group": "index", "type": index.object_type_snake_case_name}) }}
    },
{%- endfor %}
}

TYPES = [
{%- for object in objects %}
    "{{ object.snake_case_name }}",
{%- endfor %}
]

YT_SCHEMA = {
    "tables": TABLES,
    "watch_logs": WATCH_LOGS,
    "indexes": INDEXES,
    "all_tables": dict(list(TABLES.items()) + list(WATCH_LOGS.items()) + list(INDEXES.items())),
    "object_types": TYPES,
    "object_types_set": frozenset(TYPES),
}
