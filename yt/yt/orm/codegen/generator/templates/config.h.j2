// {{ autogen_marker }}

{%- set common_members -%}
NYT::TIntrusivePtr<{{ cpp_server_plugins_namespace if custom_object_manager_config else "NYT::NOrm::NServer::NObjects"}}::TObjectManagerConfig> ObjectManager;
NYT::TIntrusivePtr<{{"NYP::NServer::NAccessControl" if yp_compatible else "NYT::NOrm::NServer::NAccessControl"}}::TAccessControlManagerConfig> AccessControlManager;
NYT::TIntrusivePtr<NYT::NOrm::NServer::NMaster::TDataModelYTConnectorConfig</*AuthenticationRequired*/ {{ (not yp_compatible) | to_cpp_bool}}>> YTConnector;

NYT::NOrm::NServer::NObjects::TObjectManagerConfigPtr GetObjectManagerConfig() const override;
NYT::NOrm::NServer::NAccessControl::TAccessControlManagerConfigPtr GetAccessControlManagerConfig() const override;
{%- endset %}

#pragma once

#include "public.h"

#include <{{"yp/server/master" if yp_compatible else "yt/yt/orm/server"}}/access_control/public.h>

#include <{{cpp_server_plugins_path if custom_object_manager_config else "yt/yt/orm/server/objects"}}/public.h>

#include <yt/yt/orm/server/master/config.h>

{%- if not custom_dynamic_config_manager %}

#include <yt/yt/library/dynamic_config/public.h>
{%- endif %}

#include <library/cpp/yt/memory/intrusive_ptr.h>

namespace {{ cpp_server_namespace }} {

////////////////////////////////////////////////////////////////////////////////

inline constexpr char DefaultDBName[] = "{{ default_db_name }}";

class TMasterConfig
    : public NYT::NOrm::NServer::NMaster::TMasterConfig
{
public:
    {{ common_members | indent(4)}}
{% if not custom_dynamic_config_manager %}
    NYT::NDynamicConfig::TDynamicConfigManagerConfigPtr DynamicConfigManager;
    NYT::NYPath::TYPath DynamicConfigPath;
{%- endif %}

    REGISTER_YSON_STRUCT(TMasterConfig);

    static void Register(TRegistrar registrar);
};

DEFINE_REFCOUNTED_TYPE(TMasterConfig)

////////////////////////////////////////////////////////////////////////////////

class TMasterDynamicConfig
    : public NYT::NOrm::NServer::NMaster::TMasterDynamicConfig
{
public:
    {{ common_members | indent(4)}}

    REGISTER_YSON_STRUCT(TMasterDynamicConfig);

    static void Register(TRegistrar registrar);
};

DEFINE_REFCOUNTED_TYPE(TMasterDynamicConfig)

////////////////////////////////////////////////////////////////////////////////

} // namespace {{ cpp_server_namespace }}
