// {{ autogen_marker }}
{%- set config -%}
    {%- if custom_config -%}
        {{ cpp_server_plugins_namespace }}::
    {%- endif-%}
    TMasterConfig
{%- endset %}
{%- set additional_subdir -%}
    {%- if not yp_compatible -%}
        {{ generated_files_dir_name }}/
    {%- endif -%}
{%- endset %}

#include "program.h"

#include <{{ cpp_server_path }}/bootstrap.h>

#include <{{ cpp_objects_path }}/{{ additional_subdir }}db_schema.h>

#include <{{ client_objects_cpp_path }}/init.h>

namespace {{ cpp_server_namespace }} {

////////////////////////////////////////////////////////////////////////////////

TMasterProgram::TMasterProgram()
    : NYT::NOrm::NServer::NProgram::TMasterProgram<TMasterProgram, {{ config }}>(
        {{ cpp_objects_namespace }}::DBVersion)
{
    {{ client_objects_cpp_namespace }}::EnsureGlobalRegistriesAreInitialized();
}

NYT::NOrm::NServer::NMaster::IBootstrap* TMasterProgram::StartBootstrap(
    {{ config }}Ptr config,
    NYT::NYTree::INodePtr configPatchNode)
{
    return {{ cpp_server_namespace }}::StartBootstrap(std::move(config), std::move(configPatchNode));
}

////////////////////////////////////////////////////////////////////////////////

} // namespace {{ cpp_server_namespace }}
