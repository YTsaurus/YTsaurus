// {{ autogen_marker }}
#include "snapshot.h"

{% if snapshot.cpp_namespace -%}
namespace {{ snapshot.cpp_namespace }} {
{%- endif %}

////////////////////////////////////////////////////////////////////////////////

::NYT::TFuture<TSnapshotPtr> TSnapshotProvider::Load(
    ::NYT::NOrm::NClient::NObjects::TTimestamp timestamp)
{
    using TBaseSnapshotPtr = ::NYT::NOrm::NSnapshot::TSnapshotPtr<TSnapshotDescription>;
    return TBase::Load(timestamp)
        .ApplyUnique(BIND([] (TBaseSnapshotPtr&& baseSnapshot) {
            return ::NYT::StaticPointerCast<TSnapshot>(baseSnapshot);
        }));
}

////////////////////////////////////////////////////////////////////////////////

{% if snapshot.cpp_namespace -%}
} // namespace {{ snapshot.cpp_namespace }}
{%- endif %}
