#pragma once

#include <yt/yt/core/misc/public.h>

namespace NYT::NDistributedThrottler {

////////////////////////////////////////////////////////////////////////////////

DECLARE_REFCOUNTED_CLASS(TDistributedThrottlerConfig)
DECLARE_REFCOUNTED_STRUCT(IDistributedThrottlerFactory)

////////////////////////////////////////////////////////////////////////////////

YT_DEFINE_ERROR_ENUM(
    ((NoSuchThrottler)          (2400))
    ((UnexpectedThrottlerMode)  (2401))
);

////////////////////////////////////////////////////////////////////////////////

constexpr auto DefaultThrottleRpcTimeout = TDuration::Minutes(1);

////////////////////////////////////////////////////////////////////////////////

using TThrottlerId = TString;

////////////////////////////////////////////////////////////////////////////////

struct TThrottlerUsage
{
    double Rate = 0.0;
    double Limit = 0.0;
    i64 QueueByteSize = 0;
    i64 QueueEstimatedOverrunDuration = 0;
};

////////////////////////////////////////////////////////////////////////////////

} // namespace NYT::NDistributedThrottler
