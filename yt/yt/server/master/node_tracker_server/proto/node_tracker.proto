syntax = "proto2";

package NYT.NNodeTrackerServer.NProto;

import "yt_proto/yt/client/node_tracker_client/proto/node.proto";

import "yt_proto/yt/core/misc/proto/guid.proto";

////////////////////////////////////////////////////////////////////////////////

message TReqUnregisterNode
{
    required int32 node_id = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqDisposeLocation
{
    required int32 node_id = 1;
    required int32 location_index = 2;
}

message TReqStartNodeDisposal
{
    required int32 node_id = 1;
}

message TReqFinishNodeDisposal
{
    required int32 node_id = 1;
}

////////////////////////////////////////////////////////////////////////////////

message TReqSendNodeStates
{ }

message TMediumStatistics
{
    required int32 medium_index = 1;
    required uint32 chunk_replica_count = 2;
}

message TNodeStatistics
{
    repeated TMediumStatistics medium_statistics = 1;
    required int64 destroyed_chunk_replica_count = 2;
    required int64 chunk_push_replication_queues_size = 3;
    required int64 chunk_pull_replication_queues_size = 4;
    required int64 pull_replication_chunk_count = 5;
}

// COMPAT(aleksandra-zh).
message TReqSetCellNodeDescriptors
{
    message TNodeDescriptor
    {
        required int32 state = 1; // ENodeState
        required TNodeStatistics statistics = 2;
    }

    message TEntry
    {
        required int32 node_id = 1;
        required TNodeDescriptor node_descriptor = 2;
    }

    required int32 cell_tag = 1;
    repeated TEntry entries = 2;
}

message TReqSetNodeStatistics
{
    message TEntry
    {
        required int32 node_id = 1;
        required TNodeStatistics statistics = 2;
    }

    required int32 cell_tag = 1;
    repeated TEntry entries = 2;
}

// COMPAT(aleksandra-zh)
message TReqSetNodeStates
{
    message TEntry
    {
        required int32 node_id = 1;
        required int32 state = 2; // ENodeState
    }

    required int32 cell_tag = 1;
    repeated TEntry entries = 2;
}

message TReqSetNodeState
{
    required int32 node_id = 1;
    required int32 state = 2; // ENodeState
    required int32 cell_tag = 3;
}

////////////////////////////////////////////////////////////////////////////////

message TReqUpdateNodeResources
{
    required int32 node_id = 1;
    required NYT.NNodeTrackerClient.NProto.TNodeResources resource_usage = 2;
    required NYT.NNodeTrackerClient.NProto.TNodeResources resource_limits = 3;
}

////////////////////////////////////////////////////////////////////////////////

message TReqUpdateNodesForRole
{
    required int32 node_role = 1; // ENodeRole
    repeated int32 node_ids = 2;
}

////////////////////////////////////////////////////////////////////////////////

message TReqAddClusterNodeMaintenance
{
    required string node_address = 1;
    optional NYT.NProto.TGuid id = 2;
    required string user_name = 3;
    required int32 type = 4; // EMaintenanceType
    required string comment = 5;
}

////////////////////////////////////////////////////////////////////////////////

message TReqRemoveClusterNodeMaintenance
{
    required string node_address = 1;
    required NYT.NProto.TGuid id = 2;
}

////////////////////////////////////////////////////////////////////////////////

message TReqResetNodePendingRestartMaintenance
{
    repeated int32 node_ids = 1;
}

////////////////////////////////////////////////////////////////////////////////
